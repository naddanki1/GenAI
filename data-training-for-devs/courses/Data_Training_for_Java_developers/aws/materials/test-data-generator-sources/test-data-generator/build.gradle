buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output

        java {
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
    integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}

dependencies {

    implementation "org.apache.commons:commons-lang3:${rev_commons_lang}"
    implementation "org.apache.commons:commons-text:${rev_commons_text}"
    implementation "commons-io:commons-io:${rev_commons_io}"
    implementation "com.google.guava:guava:${rev_guava}"

    implementation "com.fasterxml.jackson.core:jackson-annotations:${rev_jackson}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${rev_jackson}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${rev_jackson}"

    implementation "org.apache.logging.log4j:log4j-api:${rev_log4j}"
    implementation "org.apache.logging.log4j:log4j-core:${rev_log4j}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${rev_log4j}"

    // AWS Kinesis SDK 2.X
    //implementation "software.amazon.awssdk:kinesis:${rev_aws_sdk}"
    // AWS Kinesis SDK 1.X
    implementation "com.amazonaws:aws-java-sdk-kinesis:${rev_aws_sdk}"

    integrationTestCompileOnly "org.projectlombok:lombok:$rev_lombok"
    integrationTestAnnotationProcessor "org.projectlombok:lombok:$rev_lombok"

    integrationTestImplementation "org.testcontainers:junit-jupiter:${rev_localstack}"
    integrationTestImplementation "org.testcontainers:localstack:${rev_localstack}"
}

jar {
    manifest {
        attributes 'Main-Class': 'org.bananalaba.datatraining.aws.testdata.application.TestDataGeneratorApplicationCli'
    }
}

task itest(type: Test) {
    description = "Run integration tests"
    group = "verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()

    systemProperty 'cliJarPath', file(shadowJar.archiveFile).getAbsolutePath()
    dependsOn shadowJar
}

tasks.getByName('build').configure {
    dependsOn itest
}

task deploy(type: Copy) {
    dependsOn shadowJar

    from('src/samples')
    from shadowJar.archiveFile

    into System.getProperty("deploymentPath") ?: 'build/deployment'
}
